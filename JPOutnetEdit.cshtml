@model JobPlacementDashboard.Models.JPOutsideNetworking

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal" id="OutsideNetworkingCreateEditStyle">

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.OutsideNetworkingID)

    <div class="form-group-rd">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group-rd">
        @Html.LabelFor(model => model.Position, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Position, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Position, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group-rd">
        @Html.LabelFor(model => model.Company, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Company, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Company, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group-rd">
        @Html.LabelFor(model => model.CompanyURL, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CompanyURL, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CompanyURL, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group-rd">
        @Html.LabelFor(model => model.LinkedIn, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.LinkedIn, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.LinkedIn, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group-rd">
        @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group-rd">
        @Html.LabelFor(model => model.Contact, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Contact, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Contact, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group-rd">
        @Html.LabelFor(model => model.Stack, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Stack, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Stack, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group-rd">
        <div class="col-md-offset-2 col-md-2">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
        <div class="col-md-offset-2 col-md-2">
            <a class="btn btn-default" id="OutsideNet-BackToList-btn" href="~/Networking/Networking">Back to List</a>
        </div>
    </div>

</div>
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
